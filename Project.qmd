---
title: "BCG vaccine and Tuberculosis"
author: Nour Jendoubi
theme: minty
format: dashboard
---


```{python}
# Packages import
import pandas as pd
import plotly.express as px
import country_converter as coco
import ipywidgets as widgets
from IPython.display import display, clear_output
from ipywidgets import interact
```


```{python}

### dataframes. all of it melted to sort year and country
# BCG vaccine
bcg =pd.read_csv("data\\bcg_vacc.csv").melt(id_vars="country", var_name="year", value_name="vac_status")

# Tuberculosis
tb_death = pd.read_csv("data\\all_forms_of_tb_number_of_deaths_estimated.csv").melt(id_vars="country", var_name="year", value_name="tb_death")
tb_incidence = pd.read_csv("data\\all_forms_of_tb_incidence_per_100000_estimated.csv").melt(id_vars="country", var_name="year", value_name="tb_incidence")

### merge of all of the data

data= pd.merge(bcg, tb_death, on = ["country", "year"])
data= pd.merge(data, tb_incidence, on = ["country", "year"])

### making the values numerical 
data["tb_death"] = data["tb_death"].replace('k', '000', regex=True)
data["tb_incidence"] = data["tb_incidence"].replace('k', '000', regex=True)


data["vac_status"] = pd.to_numeric(data["vac_status"])
data["tb_death"] = pd.to_numeric(data["tb_death"])
data["tb_incidence"] = pd.to_numeric(data["tb_incidence"])
data["year"] = pd.to_numeric(data["year"])

data =data.replace({"UAE": "United Arab Emirates"})
data["country_code"] = coco.convert(
    data["country"], to="ISO3"
)
```

```{python}
data_2020 = data[data['year'] == 2020]
```

```{python}

# all time
highest_tb_death = data.loc[data['tb_death'].idxmax()]
lowest_tb_death = data.loc[data['tb_death'].idxmin()]
highest_bcg = data.loc[data['vac_status'].idxmax()]
lowest_bcg = data.loc[data['vac_status'].idxmin()]

# Tb death in 2020
highest_tb_death_2020 = data_2020.loc[data_2020["tb_death"].idxmax()]
lowest_tb_death_2020 = data_2020.loc[data_2020["tb_death"].idxmin()]

# bcg in 2020
highest_bcg_2020 = data_2020.loc[data_2020['vac_status'].idxmax()]
lowest_bcg_2020 = data_2020.loc[data_2020['vac_status'].idxmin()]

total_tb_death_per_year = data.groupby('year')['tb_death'].sum()

```


# Tuberculosis

##
:::{.valuebox title="country with the lowest tb death all time" color="primary"}
`{python} lowest_tb_death["country"]`
:::

:::{.valuebox title="country with the highest tuberculosis incidence all time" color="secondary"}
`{python} highest_tb_death["country"]`
:::


## 

```{python}
fig_map = px.choropleth(
    data,
    locations="country_code",
    color="tb_death",
    hover_name="country",
    animation_frame="year",
    title="tuberculosis death",
)

fig_map.show()
```


# bcg vaccination
##
:::{.valuebox title="Highest BCG vaccination in 2020" color="primary"}
`{python} highest_bcg['country']`
:::
:::{.valuebox title="Lowest BCG baccination in 2020"}
`{python} lowest_bcg['country']`
:::

##
```{python}
fig_map = px.choropleth(
    data,
    locations="country_code",
    color="vac_status",
    hover_name="country",
    animation_frame="year",
    title="Vaccination status",
)

fig_map.show()
```

# BCG and tuberculosis in 2020

##
:::{.valuebox title="Highest BCG vaccination in 2020" color="primary"}
`{python} highest_bcg_2020['country']`
:::
:::{.valuebox title="Lowest BCG vaccination in 2020"}
`{python} lowest_bcg_2020['country']`
:::
##
:::{.valuebox title="country with the lowest tb death in 2020" color="primary"}
`{python} lowest_tb_death_2020["country"]`
:::

:::{.valuebox title="country with the highest tuberculosis incidence in 2020" color="secondary"}
`{python} highest_tb_death_2020["country"]`
:::

## {height="70%"}

### 
```{python}
# Selecting some countries
countries = ["India", "France"]
data["year"] = data["year"].astype(str)
filtered_data = data.query('country == @countries')

for country in countries:
    fig = px.histogram(
        filtered_data.query("country == @country"),
        x='year',
        y='vac_status',
        labels={"vac_status": "vaccine status"},
        title=f'Evolution of BCG vaccine in {country}'
    )
    fig.update_xaxes(tickangle=45)

```

###


```{python}
# Selecting some countries
countries = ["India", "France"]
data["year"] = data["year"].astype(str)
filtered_data = data.query('country == @countries')

for country in countries:
    fig = px.line(
        filtered_data.query("country == @country"),
        x='year',
        y='tb_death',
        labels={"tb_death": "tuberculosis deaths"},
        title=f"Evolution of TB Death in {country}"
    )
    fig.update_xaxes(tickangle=45)
    
```

##

::: {.callout-note appearance="simple" icon=false}

## Conclusions

BCG vaccine are given to newborn in the 1st year of life. And tuberculosis deaths can be reduced through different methods including antibiotics. the data used here is not conclusive on the effectiveness of the BCG vaccine when it relates to tuberculosis deahts.

:::